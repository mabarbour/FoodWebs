arrows(rm2[-Time,2], rm2[-Time,3], rm2[-1,2], rm2[-1,3], length=0.1, lty=1)
#### plot consumer and resource densities
matplot(rm2[,1],rm2[,c(2,3)], type = "l", ylab="Density", xlab="Time", ylim=c(0,2))
legend("topright", c("R","C"), lty=1:2, col=1:2, bty="n")
######## Experiment 3: K = 2.5
### adjust parameter values
K <- 2.5
p.rm3 <- c(r = r, e = e, a = a, K = K, Ro = Ro)
Time <- 100 # same pattern at larger time values, but I adjusted it to see the pattern more clearly
rm3 <- ode(i.state,1:Time, rmcr, p.rm3)
### adjust consumer and resource isocline
Riso <- expression(r/a * (Rx + Ro) * (1 - Rx/K))
RisoStable <- eval(Riso)
Ciso <- expression(m * Ro / (e * a - m))
CisoStable <- eval(Ciso)
# plot consumer functional response and consumer isocline
Cfr <- expression(a * C * Rx / (Rx + Ro))
CfrData <- eval(Cfr)
plot(Rx,CfrData, ylim=c(0,0.18), type = "l", ylab="Consumption Rate of Consumer", xlab="Resource Density")
abline(v=CisoStable, lty = 2, col =2)
rect(CisoStable,0,max(Rx),0.18, col=col2alpha("red",0.5)) # shaded area indicates where consumer population growth rate is greater than zero
### plot stabilities around resouce and consumer isoclines
plot(Rx,RisoStable, type = "l", ylab = "C", ylim=0:1, xlab="R",main="Carrying Capacity = 2.5")
abline(v=CisoStable, lty = 2, col = 2) # attack rate adjusted to a = 2.0
legend("topright", c("R-isocline","C-isocline"), lty=1:2, col=1:2, bty="n", cex=0.8)
points(i.state[1],i.state[2]) # starting point of experiment
arrows(rm3[-Time,2], rm3[-Time,3], rm3[-1,2], rm3[-1,3], length=0.1, lty=1)
### plot densities
matplot(rm3[,1],rm3[,c(2,3)], type = "l", ylab="Density", xlab="Time", ylim=c(0,2))
legend("topright", c("R","C"), lty=1:2, col=1:2, bty="n", cex=0.8)
###########  set parameters and state variables for the R-M C-R model
# parameter values
r <- 1.0 # per capita rate of increase in resource
K <- 1 # start of initial simulation
e <- 0.5 # predator conversion efficiency
Ro <- 0.5 # half-saturation density of predator functional response
m <- 0.5 # mortality rate of predator
a <- 1.3 # initial attack rate of 1.3 instead of 1.2 more closely replicates the figures in the book
p.rm1 <- c(r = r, e = e, a = a, K = K, Ro = Ro, m=m) # create a vector for the parameters for experiment #1
# state variable values (initial values at beginning of "experiments")
R <- 0.6
C <- 0.1
i.state <- c(R=R,C=C)
# plot graphs side by side
par(mfrow=c(1,3)) # plot graphs side-by-side
######## Experiment 1: K = 1.0
###  adjust parameters
K <- 1.0
p.rm2 <- c(r = r, e = e, a = a, K = K, Ro = Ro)
rm2 <- ode(i.state,1:Time, rmcr, p.rm2)
### adjust resource and consumer isoclines. IDEAS TO MAKE THIS LESS REDUNDANT???
Riso <- expression(r/a * (Rx + Ro) * (1 - Rx/K)) # adjusted attack rate
RisoStable <- eval(Riso)
Ciso <- expression(m * Ro / (e * a - m)) # adjusted attack rate
CisoStable <- eval(Ciso)
# plot consumer functional response and consumer isocline
Cfr <- expression(a * C * Rx / (Rx + Ro))
CfrData <- eval(Cfr)
plot(Rx,CfrData, ylim=c(0,0.18), type = "l", ylab="Consumption Rate of Consumer", xlab="Resource Density")
abline(v=CisoStable, lty = 2, col =2)
rect(CisoStable,0,max(Rx),0.18, col=col2alpha("red",0.5)) # shaded area indicates where consumer population growth rate is greater than zero
#### plot stabilities around consumer and resource isoclines.
plot(Rx, RisoStable, type = "l", ylab = "C", ylim=0:1, xlab="R", main="Carrying Capacity = 1.0")
abline(v=CisoStable, lty = 2, col =2)
legend("topright", c("R-isocline","C-isocline"), lty=1:2, bty="n", cex=0.8, col=1:2)
points(i.state[1],i.state[2]) # starting point of experiment
arrows(rm2[-Time,2], rm2[-Time,3], rm2[-1,2], rm2[-1,3], length=0.1, lty=1)
#### plot consumer and resource densities
matplot(rm2[,1],rm2[,c(2,3)], type = "l", ylab="Density", xlab="Time", ylim=c(0,2))
legend("topright", c("R","C"), lty=1:2, col=1:2, bty="n")
######## Experiment 2: K = 1.5
###  adjust parameters
K <- 1.5
p.rm2 <- c(r = r, e = e, a = a, K = K, Ro = Ro)
rm2 <- ode(i.state,1:Time, rmcr, p.rm2)
### adjust resource and consumer isoclines. IDEAS TO MAKE THIS LESS REDUNDANT???
Riso <- expression(r/a * (Rx + Ro) * (1 - Rx/K)) # adjusted attack rate
RisoStable <- eval(Riso)
Ciso <- expression(m * Ro / (e * a - m)) # adjusted attack rate
CisoStable <- eval(Ciso)
# plot consumer functional response and consumer isocline
Cfr <- expression(a * C * Rx / (Rx + Ro))
CfrData <- eval(Cfr)
plot(Rx,CfrData, ylim=c(0,0.18), type = "l", ylab="Consumption Rate of Consumer", xlab="Resource Density")
abline(v=CisoStable, lty = 2, col =2)
rect(CisoStable,0,max(Rx),0.18, col=col2alpha("red",0.5)) # shaded area indicates where consumer population growth rate is greater than zero
#### plot stabilities around consumer and resource isoclines.
plot(Rx, RisoStable, type = "l", ylab = "C", ylim=0:1, xlab="R", main="Carrying Capacity = 1.5")
abline(v=CisoStable, lty = 2, col =2)
legend("topright", c("R-isocline","C-isocline"), lty=1:2, bty="n", cex=0.8, col=1:2)
points(i.state[1],i.state[2]) # starting point of experiment
arrows(rm2[-Time,2], rm2[-Time,3], rm2[-1,2], rm2[-1,3], length=0.1, lty=1)
#### plot consumer and resource densities
matplot(rm2[,1],rm2[,c(2,3)], type = "l", ylab="Density", xlab="Time", ylim=c(0,2))
legend("topright", c("R","C"), lty=1:2, col=1:2, bty="n")
######## Experiment 3: K = 2.5
### adjust parameter values
K <- 2.5
p.rm3 <- c(r = r, e = e, a = a, K = K, Ro = Ro)
Time <- 100 # same pattern at larger time values, but I adjusted it to see the pattern more clearly
rm3 <- ode(i.state,1:Time, rmcr, p.rm3)
### adjust consumer and resource isocline
Riso <- expression(r/a * (Rx + Ro) * (1 - Rx/K))
RisoStable <- eval(Riso)
Ciso <- expression(m * Ro / (e * a - m))
CisoStable <- eval(Ciso)
# plot consumer functional response and consumer isocline
Cfr <- expression(a * C * Rx / (Rx + Ro))
CfrData <- eval(Cfr)
plot(Rx,CfrData, ylim=c(0,0.18), type = "l", ylab="Consumption Rate of Consumer", xlab="Resource Density")
abline(v=CisoStable, lty = 2, col =2)
rect(CisoStable,0,max(Rx),0.18, col=col2alpha("red",0.5)) # shaded area indicates where consumer population growth rate is greater than zero
### plot stabilities around resouce and consumer isoclines
plot(Rx,RisoStable, type = "l", ylab = "C", ylim=0:1, xlab="R",main="Carrying Capacity = 2.5")
abline(v=CisoStable, lty = 2, col = 2) # attack rate adjusted to a = 2.0
legend("topright", c("R-isocline","C-isocline"), lty=1:2, col=1:2, bty="n", cex=0.8)
points(i.state[1],i.state[2]) # starting point of experiment
arrows(rm3[-Time,2], rm3[-Time,3], rm3[-1,2], rm3[-1,3], length=0.1, lty=1)
### plot densities
matplot(rm3[,1],rm3[,c(2,3)], type = "l", ylab="Density", xlab="Time", ylim=c(0,2))
legend("topright", c("R","C"), lty=1:2, col=1:2, bty="n", cex=0.8)
###########  set parameters and state variables for the R-M C-R model
# parameter values
r <- 1.0 # per capita rate of increase in resource
K <- 1 # start of initial simulation
e <- 0.5 # predator conversion efficiency
Ro <- 0.5 # half-saturation density of predator functional response
m <- 0.5 # mortality rate of predator
a <- 1.3 # initial attack rate of 1.3 instead of 1.2 more closely replicates the figures in the book
p.rm1 <- c(r = r, e = e, a = a, K = K, Ro = Ro, m=m) # create a vector for the parameters for experiment #1
# state variable values (initial values at beginning of "experiments")
R <- 0.6
C <- 0.1
i.state <- c(R=0.6,C=0.1)
# plot graphs side by side
par(mfrow=c(1,3)) # plot graphs side-by-side
######## Experiment 1: K = 1.0
###  adjust parameters
K <- 1.0
p.rm2 <- c(r = r, e = e, a = a, K = K, Ro = Ro)
rm2 <- ode(i.state,1:Time, rmcr, p.rm2)
### adjust resource and consumer isoclines. IDEAS TO MAKE THIS LESS REDUNDANT???
Riso <- expression(r/a * (Rx + Ro) * (1 - Rx/K)) # adjusted attack rate
RisoStable <- eval(Riso)
Ciso <- expression(m * Ro / (e * a - m)) # adjusted attack rate
CisoStable <- eval(Ciso)
# plot consumer functional response and consumer isocline
Cfr <- expression(a * C * Rx / (Rx + Ro))
CfrData <- eval(Cfr)
plot(Rx,CfrData, ylim=c(0,0.18), type = "l", ylab="Consumption Rate of Consumer", xlab="Resource Density")
abline(v=CisoStable, lty = 2, col =2)
rect(CisoStable,0,max(Rx),0.18, col=col2alpha("red",0.5)) # shaded area indicates where consumer population growth rate is greater than zero
#### plot stabilities around consumer and resource isoclines.
plot(Rx, RisoStable, type = "l", ylab = "C", ylim=0:1, xlab="R", main="Carrying Capacity = 1.0")
abline(v=CisoStable, lty = 2, col =2)
legend("topright", c("R-isocline","C-isocline"), lty=1:2, bty="n", cex=0.8, col=1:2)
points(i.state[1],i.state[2]) # starting point of experiment
arrows(rm2[-Time,2], rm2[-Time,3], rm2[-1,2], rm2[-1,3], length=0.1, lty=1)
#### plot consumer and resource densities
matplot(rm2[,1],rm2[,c(2,3)], type = "l", ylab="Density", xlab="Time", ylim=c(0,2))
legend("topright", c("R","C"), lty=1:2, col=1:2, bty="n")
######## Experiment 2: K = 1.5
###  adjust parameters
K <- 1.5
p.rm2 <- c(r = r, e = e, a = a, K = K, Ro = Ro)
rm2 <- ode(i.state,1:Time, rmcr, p.rm2)
### adjust resource and consumer isoclines. IDEAS TO MAKE THIS LESS REDUNDANT???
Riso <- expression(r/a * (Rx + Ro) * (1 - Rx/K)) # adjusted attack rate
RisoStable <- eval(Riso)
Ciso <- expression(m * Ro / (e * a - m)) # adjusted attack rate
CisoStable <- eval(Ciso)
# plot consumer functional response and consumer isocline
Cfr <- expression(a * C * Rx / (Rx + Ro))
CfrData <- eval(Cfr)
plot(Rx,CfrData, ylim=c(0,0.18), type = "l", ylab="Consumption Rate of Consumer", xlab="Resource Density")
abline(v=CisoStable, lty = 2, col =2)
rect(CisoStable,0,max(Rx),0.18, col=col2alpha("red",0.5)) # shaded area indicates where consumer population growth rate is greater than zero
#### plot stabilities around consumer and resource isoclines.
plot(Rx, RisoStable, type = "l", ylab = "C", ylim=0:1, xlab="R", main="Carrying Capacity = 1.5")
abline(v=CisoStable, lty = 2, col =2)
legend("topright", c("R-isocline","C-isocline"), lty=1:2, bty="n", cex=0.8, col=1:2)
points(i.state[1],i.state[2]) # starting point of experiment
arrows(rm2[-Time,2], rm2[-Time,3], rm2[-1,2], rm2[-1,3], length=0.1, lty=1)
#### plot consumer and resource densities
matplot(rm2[,1],rm2[,c(2,3)], type = "l", ylab="Density", xlab="Time", ylim=c(0,2))
legend("topright", c("R","C"), lty=1:2, col=1:2, bty="n")
######## Experiment 3: K = 2.5
### adjust parameter values
K <- 2.5
p.rm3 <- c(r = r, e = e, a = a, K = K, Ro = Ro)
Time <- 100 # same pattern at larger time values, but I adjusted it to see the pattern more clearly
rm3 <- ode(i.state,1:Time, rmcr, p.rm3)
### adjust consumer and resource isocline
Riso <- expression(r/a * (Rx + Ro) * (1 - Rx/K))
RisoStable <- eval(Riso)
Ciso <- expression(m * Ro / (e * a - m))
CisoStable <- eval(Ciso)
# plot consumer functional response and consumer isocline
Cfr <- expression(a * C * Rx / (Rx + Ro))
CfrData <- eval(Cfr)
plot(Rx,CfrData, ylim=c(0,0.18), type = "l", ylab="Consumption Rate of Consumer", xlab="Resource Density")
abline(v=CisoStable, lty = 2, col =2)
rect(CisoStable,0,max(Rx),0.18, col=col2alpha("red",0.5)) # shaded area indicates where consumer population growth rate is greater than zero
### plot stabilities around resouce and consumer isoclines
plot(Rx,RisoStable, type = "l", ylab = "C", ylim=0:1, xlab="R",main="Carrying Capacity = 2.5")
abline(v=CisoStable, lty = 2, col = 2) # attack rate adjusted to a = 2.0
legend("topright", c("R-isocline","C-isocline"), lty=1:2, col=1:2, bty="n", cex=0.8)
points(i.state[1],i.state[2]) # starting point of experiment
arrows(rm3[-Time,2], rm3[-Time,3], rm3[-1,2], rm3[-1,3], length=0.1, lty=1)
### plot densities
matplot(rm3[,1],rm3[,c(2,3)], type = "l", ylab="Density", xlab="Time", ylim=c(0,2))
legend("topright", c("R","C"), lty=1:2, col=1:2, bty="n", cex=0.8)
###########  set parameters and state variables for the R-M C-R model
# state variable values (initial values at beginning of "experiments")
R <- 0.6
C <- 0.1
i.state <- c(R=0.6,C=0.1)
# parameter values
r <- 1.0 # per capita rate of increase in resource
K <- 1 # start of initial simulation
e <- 0.5 # predator conversion efficiency
Ro <- 0.5 # half-saturation density of predator functional response
m <- 0.5 # mortality rate of predator
a <- 1.3 # initial attack rate of 1.3 instead of 1.2 more closely replicates the figures in the book
p.rm1 <- c(r = r, e = e, a = a, K = K, Ro = Ro, m=m) # create a vector for the parameters for experiment #1
# plot graphs side by side
par(mfrow=c(1,3)) # plot graphs side-by-side
######## Experiment 1: K = 1.0
###  adjust parameters
K <- 1.0
p.rm2 <- c(r = r, e = e, a = a, K = K, Ro = Ro)
rm2 <- ode(i.state,1:Time, rmcr, p.rm2)
### adjust resource and consumer isoclines. IDEAS TO MAKE THIS LESS REDUNDANT???
Riso <- expression(r/a * (Rx + Ro) * (1 - Rx/K)) # adjusted attack rate
RisoStable <- eval(Riso)
Ciso <- expression(m * Ro / (e * a - m)) # adjusted attack rate
CisoStable <- eval(Ciso)
# plot consumer functional response and consumer isocline
Cfr <- expression(a * C * Rx / (Rx + Ro))
CfrData <- eval(Cfr)
plot(Rx,CfrData, ylim=c(0,0.18), type = "l", ylab="Consumption Rate of Consumer", xlab="Resource Density")
abline(v=CisoStable, lty = 2, col =2)
rect(CisoStable,0,max(Rx),0.18, col=col2alpha("red",0.5)) # shaded area indicates where consumer population growth rate is greater than zero
#### plot stabilities around consumer and resource isoclines.
plot(Rx, RisoStable, type = "l", ylab = "C", ylim=0:1, xlab="R", main="Carrying Capacity = 1.0")
abline(v=CisoStable, lty = 2, col =2)
legend("topright", c("R-isocline","C-isocline"), lty=1:2, bty="n", cex=0.8, col=1:2)
points(i.state[1],i.state[2]) # starting point of experiment
arrows(rm2[-Time,2], rm2[-Time,3], rm2[-1,2], rm2[-1,3], length=0.1, lty=1)
#### plot consumer and resource densities
matplot(rm2[,1],rm2[,c(2,3)], type = "l", ylab="Density", xlab="Time", ylim=c(0,2))
legend("topright", c("R","C"), lty=1:2, col=1:2, bty="n")
######## Experiment 2: K = 1.5
###  adjust parameters
K <- 1.5
p.rm2 <- c(r = r, e = e, a = a, K = K, Ro = Ro)
rm2 <- ode(i.state,1:Time, rmcr, p.rm2)
### adjust resource and consumer isoclines. IDEAS TO MAKE THIS LESS REDUNDANT???
Riso <- expression(r/a * (Rx + Ro) * (1 - Rx/K)) # adjusted attack rate
RisoStable <- eval(Riso)
Ciso <- expression(m * Ro / (e * a - m)) # adjusted attack rate
CisoStable <- eval(Ciso)
# plot consumer functional response and consumer isocline
Cfr <- expression(a * C * Rx / (Rx + Ro))
CfrData <- eval(Cfr)
plot(Rx,CfrData, ylim=c(0,0.18), type = "l", ylab="Consumption Rate of Consumer", xlab="Resource Density")
abline(v=CisoStable, lty = 2, col =2)
rect(CisoStable,0,max(Rx),0.18, col=col2alpha("red",0.5)) # shaded area indicates where consumer population growth rate is greater than zero
#### plot stabilities around consumer and resource isoclines.
plot(Rx, RisoStable, type = "l", ylab = "C", ylim=0:1, xlab="R", main="Carrying Capacity = 1.5")
abline(v=CisoStable, lty = 2, col =2)
legend("topright", c("R-isocline","C-isocline"), lty=1:2, bty="n", cex=0.8, col=1:2)
points(i.state[1],i.state[2]) # starting point of experiment
arrows(rm2[-Time,2], rm2[-Time,3], rm2[-1,2], rm2[-1,3], length=0.1, lty=1)
#### plot consumer and resource densities
matplot(rm2[,1],rm2[,c(2,3)], type = "l", ylab="Density", xlab="Time", ylim=c(0,2))
legend("topright", c("R","C"), lty=1:2, col=1:2, bty="n")
######## Experiment 3: K = 2.5
### adjust parameter values
K <- 2.5
p.rm3 <- c(r = r, e = e, a = a, K = K, Ro = Ro)
Time <- 100 # same pattern at larger time values, but I adjusted it to see the pattern more clearly
rm3 <- ode(i.state,1:Time, rmcr, p.rm3)
### adjust consumer and resource isocline
Riso <- expression(r/a * (Rx + Ro) * (1 - Rx/K))
RisoStable <- eval(Riso)
Ciso <- expression(m * Ro / (e * a - m))
CisoStable <- eval(Ciso)
# plot consumer functional response and consumer isocline
Cfr <- expression(a * C * Rx / (Rx + Ro))
CfrData <- eval(Cfr)
plot(Rx,CfrData, ylim=c(0,0.18), type = "l", ylab="Consumption Rate of Consumer", xlab="Resource Density")
abline(v=CisoStable, lty = 2, col =2)
rect(CisoStable,0,max(Rx),0.18, col=col2alpha("red",0.5)) # shaded area indicates where consumer population growth rate is greater than zero
### plot stabilities around resouce and consumer isoclines
plot(Rx,RisoStable, type = "l", ylab = "C", ylim=0:1, xlab="R",main="Carrying Capacity = 2.5")
abline(v=CisoStable, lty = 2, col = 2) # attack rate adjusted to a = 2.0
legend("topright", c("R-isocline","C-isocline"), lty=1:2, col=1:2, bty="n", cex=0.8)
points(i.state[1],i.state[2]) # starting point of experiment
arrows(rm3[-Time,2], rm3[-Time,3], rm3[-1,2], rm3[-1,3], length=0.1, lty=1)
### plot densities
matplot(rm3[,1],rm3[,c(2,3)], type = "l", ylab="Density", xlab="Time", ylim=c(0,2))
legend("topright", c("R","C"), lty=1:2, col=1:2, bty="n", cex=0.8)
###########  set parameters and state variables for the R-M C-R model
# state variable values (initial values at beginning of "experiments")
R <- 0.6
C <- 0.1
i.state <- c(R=0.6,C=0.1)
# parameter values
r <- 1.0 # per capita rate of increase in resource
K <- 1 # start of initial simulation
e <- 0.5 # predator conversion efficiency
Ro <- 0.5 # half-saturation density of predator functional response
m <- 0.5 # mortality rate of predator
a <- 1.3 # initial attack rate of 1.3 instead of 1.2 more closely replicates the figures in the book
p.rm1 <- c(r = r, e = e, a = a, K = K, Ro = Ro, m=m) # create a vector for the parameters for experiment #1
# plot graphs side by side
par(mfrow=c(1,3)) # plot graphs side-by-side
######## Experiment 1: K = 1.0
###  adjust parameters
K <- 1.0
#p.rm2 <- c(r = r, e = e, a = a, K = K, Ro = Ro)
rm1 <- ode(i.state,1:Time, rmcr, p.rm1)
### adjust resource and consumer isoclines. IDEAS TO MAKE THIS LESS REDUNDANT???
Riso <- expression(r/a * (Rx + Ro) * (1 - Rx/K)) # adjusted attack rate
RisoStable <- eval(Riso)
Ciso <- expression(m * Ro / (e * a - m)) # adjusted attack rate
CisoStable <- eval(Ciso)
# plot consumer functional response and consumer isocline
Cfr <- expression(a * C * Rx / (Rx + Ro))
CfrData <- eval(Cfr)
plot(Rx,CfrData, ylim=c(0,0.18), type = "l", ylab="Consumption Rate of Consumer", xlab="Resource Density")
abline(v=CisoStable, lty = 2, col =2)
rect(CisoStable,0,max(Rx),0.18, col=col2alpha("red",0.5)) # shaded area indicates where consumer population growth rate is greater than zero
#### plot stabilities around consumer and resource isoclines.
plot(Rx, RisoStable, type = "l", ylab = "C", ylim=0:1, xlab="R", main="Carrying Capacity = 1.0")
abline(v=CisoStable, lty = 2, col =2)
legend("topright", c("R-isocline","C-isocline"), lty=1:2, bty="n", cex=0.8, col=1:2)
points(i.state[1],i.state[2]) # starting point of experiment
arrows(rm2[-Time,2], rm2[-Time,3], rm2[-1,2], rm2[-1,3], length=0.1, lty=1)
#### plot consumer and resource densities
matplot(rm1[,1],rm1[,c(2,3)], type = "l", ylab="Density", xlab="Time", ylim=c(0,2))
legend("topright", c("R","C"), lty=1:2, col=1:2, bty="n")
######## Experiment 2: K = 1.5
###  adjust parameters
K <- 1.5
p.rm2 <- c(r = r, e = e, a = a, K = K, Ro = Ro)
rm2 <- ode(i.state,1:Time, rmcr, p.rm2)
### adjust resource and consumer isoclines. IDEAS TO MAKE THIS LESS REDUNDANT???
Riso <- expression(r/a * (Rx + Ro) * (1 - Rx/K)) # adjusted attack rate
RisoStable <- eval(Riso)
Ciso <- expression(m * Ro / (e * a - m)) # adjusted attack rate
CisoStable <- eval(Ciso)
# plot consumer functional response and consumer isocline
Cfr <- expression(a * C * Rx / (Rx + Ro))
CfrData <- eval(Cfr)
plot(Rx,CfrData, ylim=c(0,0.18), type = "l", ylab="Consumption Rate of Consumer", xlab="Resource Density")
abline(v=CisoStable, lty = 2, col =2)
rect(CisoStable,0,max(Rx),0.18, col=col2alpha("red",0.5)) # shaded area indicates where consumer population growth rate is greater than zero
#### plot stabilities around consumer and resource isoclines.
plot(Rx, RisoStable, type = "l", ylab = "C", ylim=0:1, xlab="R", main="Carrying Capacity = 1.5")
abline(v=CisoStable, lty = 2, col =2)
legend("topright", c("R-isocline","C-isocline"), lty=1:2, bty="n", cex=0.8, col=1:2)
points(i.state[1],i.state[2]) # starting point of experiment
arrows(rm2[-Time,2], rm2[-Time,3], rm2[-1,2], rm2[-1,3], length=0.1, lty=1)
#### plot consumer and resource densities
matplot(rm2[,1],rm2[,c(2,3)], type = "l", ylab="Density", xlab="Time", ylim=c(0,2))
legend("topright", c("R","C"), lty=1:2, col=1:2, bty="n")
######## Experiment 3: K = 2.5
### adjust parameter values
K <- 2.5
p.rm3 <- c(r = r, e = e, a = a, K = K, Ro = Ro)
Time <- 100 # same pattern at larger time values, but I adjusted it to see the pattern more clearly
rm3 <- ode(i.state,1:Time, rmcr, p.rm3)
### adjust consumer and resource isocline
Riso <- expression(r/a * (Rx + Ro) * (1 - Rx/K))
RisoStable <- eval(Riso)
Ciso <- expression(m * Ro / (e * a - m))
CisoStable <- eval(Ciso)
# plot consumer functional response and consumer isocline
Cfr <- expression(a * C * Rx / (Rx + Ro))
CfrData <- eval(Cfr)
plot(Rx,CfrData, ylim=c(0,0.18), type = "l", ylab="Consumption Rate of Consumer", xlab="Resource Density")
abline(v=CisoStable, lty = 2, col =2)
rect(CisoStable,0,max(Rx),0.18, col=col2alpha("red",0.5)) # shaded area indicates where consumer population growth rate is greater than zero
### plot stabilities around resouce and consumer isoclines
plot(Rx,RisoStable, type = "l", ylab = "C", ylim=0:1, xlab="R",main="Carrying Capacity = 2.5")
abline(v=CisoStable, lty = 2, col = 2) # attack rate adjusted to a = 2.0
legend("topright", c("R-isocline","C-isocline"), lty=1:2, col=1:2, bty="n", cex=0.8)
points(i.state[1],i.state[2]) # starting point of experiment
arrows(rm3[-Time,2], rm3[-Time,3], rm3[-1,2], rm3[-1,3], length=0.1, lty=1)
### plot densities
matplot(rm3[,1],rm3[,c(2,3)], type = "l", ylab="Density", xlab="Time", ylim=c(0,2))
legend("topright", c("R","C"), lty=1:2, col=1:2, bty="n", cex=0.8)
i.state
matplot(rm3[,1],rm3[,c(2,3)], type = "l", ylab="Density", xlab="Time", ylim=c(0,2))
### adjust parameter values
K <- 2.5
p.rm3 <- c(r = r, e = e, a = a, K = K, Ro = Ro)
Time <- 100 # same pattern at larger time values, but I adjusted it to see the pattern more clearly
rm3 <- ode(i.state,1:Time, rmcr, p.rm3)
### adjust consumer and resource isocline
Riso <- expression(r/a * (Rx + Ro) * (1 - Rx/K))
RisoStable <- eval(Riso)
Ciso <- expression(m * Ro / (e * a - m))
CisoStable <- eval(Ciso)
# plot consumer functional response and consumer isocline
Cfr <- expression(a * C * Rx / (Rx + Ro))
CfrData <- eval(Cfr)
plot(Rx,CfrData, ylim=c(0,0.18), type = "l", ylab="Consumption Rate of Consumer", xlab="Resource Density")
abline(v=CisoStable, lty = 2, col =2)
rect(CisoStable,0,max(Rx),0.18, col=col2alpha("red",0.5)) # shaded area indicates where consumer population growth rate is greater than zero
### plot stabilities around resouce and consumer isoclines
plot(Rx,RisoStable, type = "l", ylab = "C", ylim=0:1, xlab="R",main="Carrying Capacity = 2.5")
abline(v=CisoStable, lty = 2, col = 2) # attack rate adjusted to a = 2.0
legend("topright", c("R-isocline","C-isocline"), lty=1:2, col=1:2, bty="n", cex=0.8)
points(i.state[1],i.state[2]) # starting point of experiment
arrows(rm3[-Time,2], rm3[-Time,3], rm3[-1,2], rm3[-1,3], length=0.1, lty=1)
### plot densities
matplot(rm3[,1],rm3[,c(2,3)], type = "l", ylab="Density", xlab="Time", ylim=c(0,2))
legend("topright", c("R","C"), lty=1:2, col=1:2, bty="n", cex=0.8)
###########  set parameters and state variables for the R-M C-R model
# state variable values (initial values at beginning of "experiments")
R <- 0.6
C <- 0.1
i.state <- c(R=0.6,C=0.1)
# parameter values
r <- 1.0 # per capita rate of increase in resource
K <- 1 # start of initial simulation
e <- 0.5 # predator conversion efficiency
Ro <- 0.5 # half-saturation density of predator functional response
m <- 0.5 # mortality rate of predator
a <- 1.3 # initial attack rate of 1.3 instead of 1.2 more closely replicates the figures in the book
# plot graphs side by side
par(mfrow=c(1,3)) # plot graphs side-by-side
######## Experiment 1: K = 1.0
###  adjust parameters
K <- 1.0
p.rm1 <- c(r = r, e = e, a = a, K = K, Ro = Ro, m=m) # create a vector for the parameters for experiment #1
#p.rm2 <- c(r = r, e = e, a = a, K = K, Ro = Ro)
rm1 <- ode(i.state,1:Time, rmcr, p.rm1)
### adjust resource and consumer isoclines. IDEAS TO MAKE THIS LESS REDUNDANT???
Riso <- expression(r/a * (Rx + Ro) * (1 - Rx/K)) # adjusted attack rate
RisoStable <- eval(Riso)
Ciso <- expression(m * Ro / (e * a - m)) # adjusted attack rate
CisoStable <- eval(Ciso)
# plot consumer functional response and consumer isocline
Cfr <- expression(a * C * Rx / (Rx + Ro))
CfrData <- eval(Cfr)
plot(Rx,CfrData, ylim=c(0,0.18), type = "l", ylab="Consumption Rate of Consumer", xlab="Resource Density")
abline(v=CisoStable, lty = 2, col =2)
rect(CisoStable,0,max(Rx),0.18, col=col2alpha("red",0.5)) # shaded area indicates where consumer population growth rate is greater than zero
#### plot stabilities around consumer and resource isoclines.
plot(Rx, RisoStable, type = "l", ylab = "C", ylim=0:1, xlab="R", main="Carrying Capacity = 1.0")
abline(v=CisoStable, lty = 2, col =2)
legend("topright", c("R-isocline","C-isocline"), lty=1:2, bty="n", cex=0.8, col=1:2)
points(i.state[1],i.state[2]) # starting point of experiment
arrows(rm1[-Time,2], rm1[-Time,3], rm1[-1,2], rm1[-1,3], length=0.1, lty=1)
#### plot consumer and resource densities
matplot(rm1[,1],rm1[,c(2,3)], type = "l", ylab="Density", xlab="Time", ylim=c(0,2))
legend("topright", c("R","C"), lty=1:2, col=1:2, bty="n")
######## Experiment 2: K = 1.5
###  adjust parameters
K <- 1.5
p.rm2 <- c(r = r, e = e, a = a, K = K, Ro = Ro)
rm2 <- ode(i.state,1:Time, rmcr, p.rm2)
### adjust resource and consumer isoclines. IDEAS TO MAKE THIS LESS REDUNDANT???
Riso <- expression(r/a * (Rx + Ro) * (1 - Rx/K)) # adjusted attack rate
RisoStable <- eval(Riso)
Ciso <- expression(m * Ro / (e * a - m)) # adjusted attack rate
CisoStable <- eval(Ciso)
# plot consumer functional response and consumer isocline
Cfr <- expression(a * C * Rx / (Rx + Ro))
CfrData <- eval(Cfr)
plot(Rx,CfrData, ylim=c(0,0.18), type = "l", ylab="Consumption Rate of Consumer", xlab="Resource Density")
abline(v=CisoStable, lty = 2, col =2)
rect(CisoStable,0,max(Rx),0.18, col=col2alpha("red",0.5)) # shaded area indicates where consumer population growth rate is greater than zero
#### plot stabilities around consumer and resource isoclines.
plot(Rx, RisoStable, type = "l", ylab = "C", ylim=0:1, xlab="R", main="Carrying Capacity = 1.5")
abline(v=CisoStable, lty = 2, col =2)
legend("topright", c("R-isocline","C-isocline"), lty=1:2, bty="n", cex=0.8, col=1:2)
points(i.state[1],i.state[2]) # starting point of experiment
arrows(rm2[-Time,2], rm2[-Time,3], rm2[-1,2], rm2[-1,3], length=0.1, lty=1)
#### plot consumer and resource densities
matplot(rm2[,1],rm2[,c(2,3)], type = "l", ylab="Density", xlab="Time", ylim=c(0,2))
legend("topright", c("R","C"), lty=1:2, col=1:2, bty="n")
######## Experiment 3: K = 2.5
### adjust parameter values
K <- 2.5
p.rm3 <- c(r = r, e = e, a = a, K = K, Ro = Ro)
Time <- 100 # same pattern at larger time values, but I adjusted it to see the pattern more clearly
rm3 <- ode(i.state,1:Time, rmcr, p.rm3)
### adjust consumer and resource isocline
Riso <- expression(r/a * (Rx + Ro) * (1 - Rx/K))
RisoStable <- eval(Riso)
Ciso <- expression(m * Ro / (e * a - m))
CisoStable <- eval(Ciso)
# plot consumer functional response and consumer isocline
Cfr <- expression(a * C * Rx / (Rx + Ro))
CfrData <- eval(Cfr)
plot(Rx,CfrData, ylim=c(0,0.18), type = "l", ylab="Consumption Rate of Consumer", xlab="Resource Density")
abline(v=CisoStable, lty = 2, col =2)
rect(CisoStable,0,max(Rx),0.18, col=col2alpha("red",0.5)) # shaded area indicates where consumer population growth rate is greater than zero
### plot stabilities around resouce and consumer isoclines
plot(Rx,RisoStable, type = "l", ylab = "C", ylim=0:1, xlab="R",main="Carrying Capacity = 2.5")
abline(v=CisoStable, lty = 2, col = 2) # attack rate adjusted to a = 2.0
legend("topright", c("R-isocline","C-isocline"), lty=1:2, col=1:2, bty="n", cex=0.8)
points(i.state[1],i.state[2]) # starting point of experiment
arrows(rm3[-Time,2], rm3[-Time,3], rm3[-1,2], rm3[-1,3], length=0.1, lty=1)
### plot densities
matplot(rm3[,1],rm3[,c(2,3)], type = "l", ylab="Density", xlab="Time", ylim=c(0,2))
legend("topright", c("R","C"), lty=1:2, col=1:2, bty="n", cex=0.8)
